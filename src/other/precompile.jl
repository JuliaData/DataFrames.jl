# precompile.jl contains precompilation directives for all methods whose compilation
# is triggered by running DataFrames tests and takes more than a given threshold
# For all=true, the threshold is 0.01, for all=false it is 0.1.
# `precompile` calls are generated using SnoopCompile via:
#     using SnoopCompileCore
#     inf_timing = @snoopi tmin=0.01 include("test/runtests.jl")
#     using SnoopCompile
#     pc = SnoopCompile.parcel(inf_timing)
#     SnoopCompile.write("src/other/precompile_tmp.jl", pc[:DataFrames], always=true)
# and then hand edited. The editing steps are:
# * removing signatures with anonymous functions
# * removing signatures with specific NamedTuples passed as arguments except `x1` as name or kwargs
#   (which is generated internally)
# * changing Int64 to Int (to handle 32-bit architectures correctly)
# * disabling precompilation on Julia older than 1.5
# * run @warnpcfail check for all=true and all=false both on Julia stable and nightly

function precompile(all=false)
    VERSION >= v"1.5" || return nothing
    if !all
        ccall(:jl_generating_output, Cint, ()) == 1 || return nothing

        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int32, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(Tables.namedtupleiterator),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Dict{Symbol, Symbol}}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Char}, Vector{Char}, Vector{Char}}, 3},OnCol{Tuple{Vector{Char}, Vector{Char}, Vector{Char}}, 3}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Symbol})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :source, :makeunique), Tuple{Symbol, Symbol, Bool}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(subset!),GroupedDataFrame{SubDataFrame{DataFrame, Index, Base.OneTo{Int}}},Any})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(push!),DataFrame,DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{Aggregate{typeof(std), Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Any}, Vector{Int}}, 2},OnCol{Tuple{Vector{Any}, Vector{Int}}, 2}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Vector{Any},Vector{Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(push!)),NamedTuple{(:cols,), Tuple{Symbol}},typeof(push!),DataFrame,Dict{Char, Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :indicator), Tuple{Symbol, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(push!),DataFrame,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(stack),DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(transform)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(transform),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Any})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Any}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/latex")},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(subset!),GroupedDataFrame{DataFrame},Any})
        Base.precompile(Tuple{typeof(append!),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :source, :makeunique), Tuple{Symbol, String, Bool}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{BigInt}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_gen_colnames),Any,Type{AsTable}})
        Base.precompile(Tuple{typeof(groupby),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Any})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},MIME{Symbol("text/latex")},DataFrame})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(std), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(describe),DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},Vector{Int},BitVector})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(permutedims),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(nonunique),DataFrame,Function})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Float64}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(subset),GroupedDataFrame{DataFrame},Any})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :renamecols, :source), Tuple{Vector{Any}, Pair{String, String}, Symbol}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(combine),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Any,Any})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},UnitRange{Int},Symbol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Char, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(vcat),DataFrame,DataFrame,DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{Any, Int}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Symbol,Vector{Any}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Base.OneTo{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{RepeatedVector{Union{Missing, Int}}, RepeatedVector{Union{Missing, Int}}, RepeatedVector{Union{Missing, String}}, Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
    else
        Base.precompile(Tuple{Type{OnCol},Vector{String},Vararg{AbstractVector{T} where T, N} where N})
        Base.precompile(Tuple{typeof(flatten),DataFrame,All{Tuple{}}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,typeof(/),Vector{Bool},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Char}, Vector{Char}, Vector{Char}}, 3},OnCol{Tuple{Vector{Char}, Vector{Char}, Vector{Char}}, 3}})
        Base.precompile(Tuple{typeof(completecases),DataFrame,InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 2}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},InvertedIndex{Colon}})
        Base.precompile(Tuple{Type{OnCol},Vector{Union{Missing, Int}},Vararg{AbstractVector{T} where T, N} where N})
        Base.precompile(Tuple{typeof(rename),DataFrame,Vector{Pair{String, String}}})
        Base.precompile(Tuple{Core.kwftype(typeof(stack)),NamedTuple{(:view, :variable_eltype), Tuple{Bool, DataType}},typeof(stack),DataFrame,Vector{Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2}})
        Base.precompile(Tuple{typeof(select),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{String}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, Nothing}},typeof(reduce),typeof(vcat),NTuple{5, DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},Vector{Int},BitVector,Bool})
        Base.precompile(Tuple{typeof(view),DataFrame,BitVector,Symbol})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(dropmissing!),DataFrame,InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(antijoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(antijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, Index, UnitRange{Int}},Any})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{String, Int, String}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{String}},Tuple{IntegerRefpool{Union{Missing, Int}}, Nothing},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, Nothing},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Type{Vector{T} where T},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{UnitRange{Int}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(subset!),GroupedDataFrame{SubDataFrame{DataFrame, Index, Base.OneTo{Int}}},Any})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Union{Int, Tuple{Symbol, Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Vector{Bool}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Tuple{DataFrame, SubDataFrame{DataFrame, Index, Base.OneTo{Int}}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},String,CartesianIndex{2}})
        Base.precompile(Tuple{Type{DataFrame},Dict{Any, Int}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Vector{BigInt},Colon})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_broadcast_unalias_helper),DataFrame,SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Int,Bool})
        Base.precompile(Tuple{Type{DataFrame},Vector{Vector{T} where T},Symbol})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Int, 1, Vector{Int}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Pair{typeof(nrow), Symbol}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Vector{Int}},Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Rational{Int}},Function,Function,Nothing,Function,Bool,Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(repeat)),NamedTuple{(:inner, :outer), Tuple{Bool, Int}},typeof(repeat),DataFrame})
        Base.precompile(Tuple{Type{DataFrame},Dict{Symbol, Int}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},PooledVector{Int, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Pair{String, typeof(sum)}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{Type{DataFrame},Vector{UnitRange{Int}},Vector{String}})
        Base.precompile(Tuple{typeof(do_call),typeof(last),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{String, String}}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(rename),DataFrame,Pair{Bool, Symbol}})
        Base.precompile(Tuple{Type{DFPerm},ForwardOrdering,Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Union{Missing, String}},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{typeof(wrap),Matrix{Float64}})
        Base.precompile(Tuple{typeof(normalize_selection),SubIndex{Index, Vector{Int}, Vector{Int}},typeof(nrow),Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(view),DataFrame,Vector{Union{Missing, UInt}},Colon})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Union{Missing, Float64}, 1, Vector{Union{Missing, Float64}}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Union{Missing, Float64}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Float64}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(getindex),DataFrameRow{DataFrame, Index},UnitRange{Int}})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{String}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),Vector{String},Vector{Union{Missing, String}}})
        Base.precompile(Tuple{typeof(sort!),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Any}, Vector{Any}}}})
        Base.precompile(Tuple{typeof(_transformation_helper),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Vector{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Cols{Tuple{String, Int}}})
        Base.precompile(Tuple{typeof(isless),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Union{Missing, Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Any,Any})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, UnitRange{Int}},InvertedIndex{Vector{Symbol}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Any},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},BitVector})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Nothing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :validate), Tuple{Symbol, Tuple{Bool, Bool}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Vector{Any}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :renamecols), Tuple{Vector{Any}, Pair{String, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(<),DataFrameRow{DataFrame, Index},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_preprocess_column),RepeatedVector{Union{Missing, String}},Int,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3}})
        Base.precompile(Tuple{typeof(map),Function,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{Aggregate{typeof(first), Nothing},Vector{Union{Missing, Number}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(view),DataFrame,InvertedIndex{Int},Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Vector{String}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(select),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},PooledVector{Int, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{Core.kwftype(typeof(select)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(select),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Any,Any})
        Base.precompile(Tuple{typeof(_names),SubIndex{SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}, Vector{Int}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(hcat),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},DataFrame})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Float64}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(std), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(_filter!_helper),DataFrame,typeof(==),Vector{Int},Vararg{Vector{Int}, N} where N})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Regex})
        Base.precompile(Tuple{typeof(rename),DataFrame,Pair{Int, String}})
        Base.precompile(Tuple{typeof(completecases),DataFrame,InvertedIndex{Vector{Any}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Union{Missing, Int}}, Vector{Float64}, Vector{Float64}}}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Real}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Symbol})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Nothing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, Float64}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :source, :makeunique), Tuple{Symbol, Symbol, Bool}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(isthreadsafe),Tuple{Vector{Float64}, Vector{Float64}},Tuple{Vector{Any}}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Any}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{true},Nothing,Bool,Bool})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},UnitRange{Int},String})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{String, String}}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(subset)),NamedTuple{(:view,), Tuple{Bool}},typeof(subset),SubDataFrame{DataFrame, Index, UnitRange{Int}},Any})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Int},Vector{Int}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Union{Missing, String}},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, String}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{Union{Missing, Char}},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}, SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Int},Function,Function,Nothing,Nothing,Bool,PooledVector{Int32, UInt32, Vector{UInt32}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Any}, Vector{Any}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(view),DataFrame,BitVector,Vector{Int}})
        Base.precompile(Tuple{typeof(push!),DataFrame,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols, :source), Tuple{Symbol, Symbol}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Missing},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2}})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Union{Missing, Int}},Vector{Union{Missing, Int}},Vararg{Vector{Union{Missing, Int}}, N} where N})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Float64}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},NamedTuple{(), Tuple{}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Any},Function,Function,Nothing,Nothing,Bool,Vector{Missing},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(maximum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Number}}},Int})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(rename!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(rename!),Index,Vector{Symbol}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Between{Int, Int}})
        Base.precompile(Tuple{Type{DataFrame},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2},BitVector})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Union{Missing, Real}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat!),DataFrame,Vector{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, Vector{Int}},Tuple{Vector{Int}, IntegerRefpool{Int}},Tuple{Vector{UInt32}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(std),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(==),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},MIME{Symbol("text/html")},DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Int},Vector{Int},BitVector,Bool})
        Base.precompile(Tuple{typeof(_prehash),OnCol{Tuple{Vector{Int}, Vector{Float64}}, 2}})
        Base.precompile(Tuple{typeof(transform!),Union{Function, Type},DataFrame})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Nothing,Bool,Vector{Float64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(names),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},InvertedIndex{Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(disallowmissing)),NamedTuple{(:error,), Tuple{Bool}},typeof(disallowmissing),DataFrame,Vector{String}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Char}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(Base.to_index),GroupedDataFrame{DataFrame},Dict{String, Any}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,Vector{Union{Missing, Symbol}},Int,Vector{Int},Int,Vector{Int},Int})
        Base.precompile(Tuple{typeof(do_call),ByRow{Base.Fix2{typeof(<), Int}},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(std),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(wrap_table),Vector{Any},FirstSingleCol})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{ComplexF64},Function,Function,Nothing,Function,Bool,Vector{Complex{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Missing}, Vector{Missing}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:copycols,), Tuple{Bool}},Type{DataFrame},Vector{Vector{Int}},Symbol})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Int}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(wrap),Tuple{Int, Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:show_row_number,), Tuple{Bool}},typeof(show),IOContext{IOBuffer},DataFrame})
        Base.precompile(Tuple{typeof(groupindices),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{String}, Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},InvertedIndex{InvertedIndex{Colon}}})
        Base.precompile(Tuple{typeof(genkeymap),GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Symbol}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Float64}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Missing}, Vector{Missing}, Vector{Missing}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(Base.to_index),GroupedDataFrame{DataFrame},Dict{Symbol, Missing}})
        Base.precompile(Tuple{typeof(crossjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(getindex),DataFrame,UnitRange{Int},Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3}})
        Base.precompile(Tuple{typeof(map2refs),PooledVector{Int, UInt32, Vector{UInt32}},Dict{Int, UInt32}})
        Base.precompile(Tuple{typeof(dropmissing),DataFrame,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{InvertedIndex{Regex}}})
        Base.precompile(Tuple{Core.kwftype(typeof(subset)),NamedTuple{(:skipmissing, :view), Tuple{Bool, Bool}},typeof(subset),GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(merge),NamedTuple{(), Tuple{}},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_preprocess_column),StepRange{Char, Int},Int,Bool})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Vector{Union{Missing, Real}}})
        Base.precompile(Tuple{typeof(wrap),Irrational{:π}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},typeof(!),Cols{Tuple{Colon}}})
        Base.precompile(Tuple{Type{DFPerm},Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}},Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}, SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(valuecols),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Int},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{UInt32},Vector{Union{Missing, UInt32}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{UInt32},Vector{Union{Missing, UInt32}}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(filter!),Function,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Symbol}}, Vector{Union{Missing, Symbol}}}, 2},OnCol{Tuple{Vector{Union{Missing, Symbol}}, Vector{Union{Missing, Symbol}}}, 2}})
        Base.precompile(Tuple{typeof(sort!),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Int}, Vector{Union{Missing, Int}}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(select)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(select),DataFrame,Any,Any})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Matrix{Int},InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(names),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Type})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Vector{Pair{Symbol, Symbol}}, Bool, Tuple{Bool, Bool}, Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Any},Vector{Union{Missing, Bool}},Vector{Int}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{DataFrame},Dict{Symbol, Any}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getproperty),DataFrameRow{DataFrame, Index},String})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Vector{Int}}, false}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},BitVector})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),Vector{Union{Missing, Int}},Vector{Float64}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{String}},Val{true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Bool}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{RepeatedVector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Tuple{Symbol}}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,typeof(/),Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(sort),DataFrame,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, Index},GroupKey{GroupedDataFrame{DataFrame}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3}})
        Base.precompile(Tuple{typeof(Tables.namedtupleiterator),DataFrame})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Complex{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Any}, Vector{Int}}, 2},OnCol{Tuple{Vector{Any}, Vector{Int}}, 2}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Vector{Symbol}, Nothing}},typeof(reduce),typeof(vcat),Tuple{DataFrame, DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Symbol}}, Vector{Symbol}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{UInt32},Vector{Missing}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(innerjoin),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(flatten),DataFrame,InvertedIndex{Symbol}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, Rational{Int}}},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(Base.to_index),GroupedDataFrame{DataFrame},Tuple{Missing}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{Symbol, Vector{T} where T}},Symbol})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Int},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Between{Symbol, Int}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Union{Missing, Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Int}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{Type{DataFrame},BitMatrix,Vector{String}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}, Vector{Int}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Float64}}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Int, Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{String}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},DataFrame})
        Base.precompile(Tuple{typeof(check_mapping_allowed),SubArray{Missing, 1, Vector{Missing}, Tuple{UnitRange{Int}}, true},Vector{Int},Nothing,Nothing})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Int},Vector{Missing}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},InvertedIndex{Vector{Bool}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Pair{Symbol, Symbol}, Bool, Tuple{Bool, Bool}, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{String}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{Vector{Symbol}}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{Symbol, Vector{Union{Missing, String}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Union{Missing, Bool}, 1, Vector{Union{Missing, Bool}}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Union{Missing, Bool}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Bool}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(names),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}},Regex})
        Base.precompile(Tuple{typeof(prepare_on_col),SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{String, Vector{Int}}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}},OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},BitVector})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int}}, Int}, true}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Missing},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},BitVector})
        Base.precompile(Tuple{Type{DataFrame},Dict{String, Vector{Union{Missing, Float64}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(disallowmissing)),NamedTuple{(:error,), Tuple{Bool}},typeof(disallowmissing),DataFrame,Vector{Bool}})
        Base.precompile(Tuple{typeof(mapcols),Type{Vector{Union{Missing, String}}},DataFrame})
        Base.precompile(Tuple{typeof(ourshow),IOBuffer,Int32,Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{typeof(combine),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Missing},Vector{Union{Missing, Int}},BitVector})
        Base.precompile(Tuple{ByRow{typeof(!)},SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols, :source), Tuple{Symbol, String}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Pair{Symbol, String},Pair{Symbol, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),SubDataFrame{DataFrame, Index, Vector{Int}},Tuple{Vector{Union{Missing, String}}, Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Int},Vector{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(select!),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ReverseOrdering{ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,DataFrame,Int,Bool,Base.RefValue{Any},Symbol,Vector{DataFrameRow{DataFrame, Index}}})
        Base.precompile(Tuple{typeof(copy),SubIndex{Index, Vector{Int}, Vector{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Vector{Int}}}},Tuple{Vector{Vector{Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int32, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :validate, :matchmissing), Tuple{Symbol, Tuple{Bool, Bool}, Symbol}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},GroupKey{GroupedDataFrame{DataFrame}}})
        Base.precompile(Tuple{typeof(names),SubIndex{SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}, Vector{Int}}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Dict{Symbol, Symbol}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Int},PooledVector{Int, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{typeof(unique),DataFrame,InvertedIndex{Vector{Bool}}})
        Base.precompile(Tuple{typeof(do_call),typeof(first),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Any},Function,Function,Function,Function,Bool,Vector{Union{Missing, Real}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Number}}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(sort!),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}},Tuple{IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Float64}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Colon,All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(select)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(select),SubDataFrame{DataFrame, Index, Vector{Int}},Any})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},BitVector})
        Base.precompile(Tuple{typeof(rename!),DataFrame,Dict{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, String}},Vector{Union{Missing, String}},BitVector})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(check_aggregate),ComposedFunction{typeof(last), typeof(skipmissing)},Vector{BigFloat}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Type{DataFrame},Matrix{Real},Vector{String}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,typeof(/),Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{DataFrame},Pair{String, Vector{Any}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Nothing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, Bool}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3}})
        Base.precompile(Tuple{typeof(wrap),Matrix{Int}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, BigInt}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(ourshow),IOContext{IOBuffer},Float32,Int})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Int},Vector{String}})
        Base.precompile(Tuple{Type{OnCol},Vector{Union{Missing, Symbol}},Vararg{Vector{Union{Missing, Symbol}}, N} where N})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Between{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(rename),DataFrame,Pair{UInt8, Symbol}})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{String},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame,Vector{Int}})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,DataFrame,Nothing,Bool,Base.RefValue{Any},Symbol,Vector{Float64}})
        Base.precompile(Tuple{typeof(getmaxwidths),DataFrame,IOContext{IOBuffer},UnitRange{Int},UnitRange{Int},Symbol,Nothing,Bool,IOBuffer,Int})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Int}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/latex")},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Regex,Regex})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Vector{Any}})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{Type{OnCol},Vector{Union{Missing, Int}},Vararg{Vector{Union{Missing, Int}}, N} where N})
        Base.precompile(Tuple{Core.kwftype(typeof(antijoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(antijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(vcat),SubDataFrame{DataFrame, Index, Vector{Int}},SubDataFrame{DataFrame, Index, Vector{Int}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Symbol}}, Vector{Union{Missing, Symbol}}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Nothing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, String}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2}})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{String, Int}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Missing},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),SubDataFrame{DataFrame, Index, Vector{Int}},Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Int}, Vector{Union{Missing, Float64}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,NTuple{4, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Any},Vector{Union{Missing, Bool}}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(semijoin)),NamedTuple{(:on,), Tuple{Pair{String, String}}},typeof(semijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),DataFrame,StepRange{Int, Int},Colon})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Float64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{String, Int}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},BitVector})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},typeof(!),Between{Int, Int}})
        Base.precompile(Tuple{typeof(transform),Union{Function, Type},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,typeof(/),Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(Tables.schema),SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(fill_row!),DataFrameRow{DataFrame, Index},Tuple{Vector{Int}, Vector{Int}},Int,Int,Tuple{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Missing},Vector{Int}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Vector{Int}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, Int}},Vector{Int},BitVector})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(transform)),NamedTuple{(:renamecols,), Tuple{Bool}},typeof(transform),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(summary),DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Int}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Union{Missing, Float64}}}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(stack)),NamedTuple{(:variable_eltype,), Tuple{UnionAll}},typeof(stack),DataFrame,Vector{Symbol}})
        Base.precompile(Tuple{Type{Vector{T} where T},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(prepare_on_col),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{String},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{typeof(rename),Function,DataFrame})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Vector{Int}},DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(transform),Union{Function, Type},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(do_call),typeof(+),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}},Int})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(identity)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Int})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(mean), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Tuple{Any, Int}}})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(delete!),DataFrame,InvertedIndex{Vector{Bool}}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{Symbol, String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, ComplexF64}},Function,Function,Nothing,Nothing,Bool,Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Base.OneTo{Int}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,DataFrame,InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/csv")},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{BigFloat},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Any},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(semijoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(semijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(combine),Union{Function, Type},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(fill_row!),NamedTuple{(:x1,), Tuple{Tuple{Int}}},Tuple{Vector{Tuple{Int}}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{UInt32},Vector{UInt32},BitVector,Bool})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Union{Missing, Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{UInt32},Vector{UInt32}})
        Base.precompile(Tuple{typeof(isequal),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Type{DataFrame},Vector{UnitRange},Symbol})
        Base.precompile(Tuple{typeof(_add_multicol_res),Matrix{Int},DataFrame,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Vector{Symbol},Base.RefValue{Bool},Base.RefValue{Any},Int,Bool,Vector{Symbol}})
        Base.precompile(Tuple{Type{DataFrame},Vector{BitVector},Vector{Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(filter),Pair{Symbol, typeof(identity)},SubDataFrame{DataFrame, Index, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 2},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},BitVector})
        Base.precompile(Tuple{Type{DFPerm},Vector{Ordering},Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{typeof(map2refs),PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},Dict{Int, UInt32}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{String, String}}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Cols{Tuple{Int, String}}})
        Base.precompile(Tuple{typeof(sort!),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Union{Missing, Int}}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(minimum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Number}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Vector{String}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{String}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(maximum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(first),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(minmax)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Float64}, Vector{Float64}},Int})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2},BitVector})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{Int},Colon,Int})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Any}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{UnitRange{Int}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Tuple{SubDataFrame{DataFrame, Index, UnitRange{Int}}, DataFrame}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Union{Missing, Float64}},Vector{Any}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Type{OnCol},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vararg{AbstractVector{T} where T, N} where N})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, ComplexF64}},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :matchmissing), Tuple{Symbol, Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{String, Bool, Tuple{Bool, Bool}, Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(stack),DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{BigInt}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{BigInt}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(mean), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Union{Int, GroupKey{GroupedDataFrame{DataFrame}}}}})
        Base.precompile(Tuple{Type{DataFrame},Dict{String, Int}})
        Base.precompile(Tuple{typeof(ourshow),IOContext{IOBuffer},Float64,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(antijoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, String}}}},typeof(antijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(insertcols!)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(insertcols!),DataFrame,Int,Pair{String, Vector{Int}}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Symbol,Pair{Symbol, Vector{String}}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(append!),DataFrame,DataFrame})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{Symbol, Int}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,UnitRange{Int},Between{Int, Int}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Float64}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Union{Missing, Float64}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(repeat),DataFrame,Int})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{Type{Matrix{Float64}},DataFrame})
        Base.precompile(Tuple{typeof(combine),Union{Function, Type},SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}}})
        Base.precompile(Tuple{Type{SubDataFrame},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Colon,Cols{Tuple{Vector{Int}}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Tuple{Int, Int, Int}}}},Tuple{Vector{Tuple{Int, Int, Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, Nothing}},typeof(reduce),typeof(vcat),NTuple{8, DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},Vector{Int}})
        Base.precompile(Tuple{typeof(view),DataFrame,typeof(!),Between{Int, Int}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2}})
        Base.precompile(Tuple{typeof(do_call),typeof(identity),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Tuple{Int, Int}}},Int})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},Vector{Union{Missing, Int}},BitVector,Bool})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},MIME{Symbol("text/latex")},DataFrame})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,Nothing,Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Int}, Vector{Float64}, Vector{Float64}}}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Aggregate{typeof(first), Nothing},Vector{Number},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},StackedVector{Union{Missing, Int}},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat!),DataFrame,DataFrame,DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{Core.kwftype(typeof(select)),NamedTuple{(:keepkeys,), Tuple{Bool}},typeof(select),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{Type{Matrix{T} where T},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{Type{DataFrame},DataFrame})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,BitVector})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Cols{Tuple{Int, Int}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(sort!),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Int, Symbol}}})
        Base.precompile(Tuple{typeof(view),DataFrame,Vector{Integer},Colon})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, Float64}},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:copycols,), Tuple{Bool}},Type{DataFrame},Pair{Symbol, Vector{Int}},Pair{Symbol, Vector{Float64}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 2},BitVector})
        Base.precompile(Tuple{ByRow{typeof(identity)},Vector{Int}})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3}})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ReverseOrdering{ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Colon})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},Vector{Int}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Real},Function,Function,Function,Nothing,Bool,Vector{Union{Missing, Real}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(transform),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Int, String}})
        Base.precompile(Tuple{typeof(wrap),SubArray{Float64, 1, Vector{Float64}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}})
        Base.precompile(Tuple{typeof(getiterator),SubDataFrame{DataFrame, Index, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(sort),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{Symbol, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Union{Nothing, Bool}},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, Bool}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{String}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Vector{Integer},Colon})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols,), Tuple{Vector{Symbol}}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(do_call),typeof(+),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Int})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(push!),DataFrame,Vector{String}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Bool}},Tuple{},FirstMultiCol})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Float64},Vector{Float64},BitVector})
        Base.precompile(Tuple{typeof(show),IOBuffer,DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Int},Vector{Union{}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(), Tuple{}},Tuple{},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{},FirstMultiCol})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Missing}, Vector{Missing}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Float64, String}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(filter),Pair{Vector{String}, typeof(==)},DataFrame})
        Base.precompile(Tuple{Type{DataFrame},Vector{Vector{Bool}},Vector{Symbol}})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{ByRow{Base.Fix2{typeof(<), Int}},Vector{Int}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},Vector{Union{Missing, Int}},BitVector})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,Perm{ForwardOrdering, Vector{Float64}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Base.OneTo{Int}}, true}},Val{true}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Regex})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},typeof(!),InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Bool}}},Tuple{IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Bool}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{Vector{Symbol}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{String},Vector{String},BitVector})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Any}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Float64}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat!),DataFrame,UnitRange{Int}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(rename),DataFrame,Pair{BigInt, Symbol}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{String, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}, SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,Perm{ForwardOrdering, Vector{Int}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{BigFloat},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,Perm{ForwardOrdering, Vector{Int}}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Dict{String, Int},Int,Vector{String}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Vector{Int}}, false}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{Vector{Int}}, false}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:allrows, :allcols, :allgroups, :rowlabel, :summary, :truncate), Tuple{Bool, Bool, Bool, Symbol, Bool, Int}},typeof(show),Base.PipeEndpoint,GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(append!),DataFrame,Dict{Symbol, AbstractVector{T} where T}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{Symbol, String}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{UInt32},Vector{Missing},BitVector,Bool})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{BigFloat},typeof(!),Int})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3}})
        Base.precompile(Tuple{Type{DataFrame},Vector{Vector{Int}},Vector{Symbol}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Float64}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Union{Missing, Bool}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :renamecols, :makeunique), Tuple{Symbol, Pair{Int, Int}, Bool}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),typeof(cor),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}, Vector{Int}},Int})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},BitVector})
        Base.precompile(Tuple{typeof(filter),Function,DataFrame})
        Base.precompile(Tuple{typeof(rename),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Pair{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),SubDataFrame{DataFrame, Index, Vector{Int}},NTuple{4, Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,NTuple{4, Symbol},FirstMultiCol})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(length),RepeatedVector{String}})
        Base.precompile(Tuple{typeof(combine),DataFrame,Any})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Dict{Symbol, Any}})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:eltypes,), Tuple{Bool}},typeof(show),IOBuffer,MIME{Symbol("text/latex")},DataFrameRows{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Pair{String, String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Pair{String, typeof(last)}}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),Vector{String},Vector{Union{Missing, String}},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},BitVector})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Vector{DataFrame}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(map2refs),PooledVector{Int, UInt32, Vector{UInt32}},Dict{Union{Missing, Int}, UInt32}})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, String}}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{ByRow{typeof(-)},Vector{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Vector{String}, Bool, Tuple{Bool, Bool}, Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(stack),DataFrame,Vector{Symbol}})
        Base.precompile(Tuple{typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},UnitRange{Bool}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Symbol}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(sort!),DataFrame,Base.Sort.MergeSortAlg,Perm{ForwardOrdering, Vector{Int}}})
        Base.precompile(Tuple{typeof(dropmissing!),DataFrame,InvertedIndex{Vector{Symbol}}})
        Base.precompile(Tuple{typeof(sort!),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}}}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(genkeymap),GroupedDataFrame{DataFrame},Tuple{Vector{Int}, Vector{Int}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Complex{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Tuple{Int, Int}}}},Tuple{Vector{Tuple{Int, Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(_preprocess_column),Vector{Union{Missing, Float64}},Int,Bool})
        Base.precompile(Tuple{typeof(map_refarray),Vector{Union{Missing, UInt32}},Vector{UInt32},Val{1}})
        Base.precompile(Tuple{typeof(stack),DataFrame,Vector{Symbol},Vector{Any}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}}},OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(+),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},NTuple{4, Vector{Int}},Int})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Union{Tuple{Symbol, Int}, GroupKey{GroupedDataFrame{DataFrame}}}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Vector{Float64}}}},Tuple{Vector{Vector{Float64}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Int, Int, String}}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Any},Function,Function,Nothing,Nothing,Bool,Vector{Real},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(stack),DataFrame,Vector{Any},Symbol})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,Vector{Union{Missing, Int}},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Any}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},BitVector})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(unstack),DataFrame,Symbol,Symbol,Symbol})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Vector{SubDataFrame}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Vector{Union{Missing, Integer}},Colon})
        Base.precompile(Tuple{typeof(push!),DataFrame,Vector{Int}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},BitVector,Bool})
        Base.precompile(Tuple{Type{DataFrame},Tables.MatrixTable{Matrix{Any}}})
        Base.precompile(Tuple{typeof(show),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Union{Missing, Int}},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(==),GroupKey{GroupedDataFrame{DataFrame}},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{Type{DataFrame},Vector{Vector{String}},Vector{Symbol}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(mapcols!),typeof(sum),DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Core.kwftype(typeof(push!)),NamedTuple{(:cols,), Tuple{Symbol}},typeof(push!),DataFrame,Dict{Char, Int}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 3}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{ByRow{typeof(!)},Vector{Any}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(minimum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Int,Vector{Bool}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Int},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(isapprox)),NamedTuple{(:atol,), Tuple{Float64}},typeof(isapprox),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{Float64},Colon,Int})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Base.ReshapedArray{Int, 2, UnitRange{Int}, Tuple{}},UnitRange{Int},Colon})
        Base.precompile(Tuple{Core.kwftype(typeof(describe)),NamedTuple{(:cols,), Tuple{InvertedIndex{String}}},typeof(describe),DataFrame})
        Base.precompile(Tuple{typeof(filter),Function,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(view),DataFrameRow{DataFrame, Index},All{Tuple{}}})
        Base.precompile(Tuple{typeof(copy),DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Base.OneTo{Int}}, true}},Tuple{IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Base.OneTo{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Int, String, Int}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, NTuple{4, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Int}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{String},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(last), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Missing},Vector{Missing}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Bool}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Bool}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(describe)),NamedTuple{(:cols,), Tuple{Vector{Pair{Symbol, Pair{Function, Symbol}}}}},typeof(describe),DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, String}},typeof(reduce),typeof(vcat),NTuple{4, DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, Nothing}},typeof(reduce),typeof(vcat),NTuple{4, SubDataFrame{DataFrame, Index, Vector{Int}}}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Pair{Symbol, Base.RefValue{Int}},Pair{Symbol, Array{Int, 0}}})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Matrix{Int},Colon,All{Tuple{}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{String}}},Tuple{Vector{String}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Int, Int}})
        Base.precompile(Tuple{typeof(dropmissing),DataFrame,InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},PooledVector{Int32, UInt32, Vector{UInt32}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Base.ReshapedArray{Int, 2, UnitRange{Int}, Tuple{}},Colon,Colon})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Float64}, Vector{String}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Regex})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Union{Missing, Int}},BitVector,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},BitVector})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Char, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(innerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ReverseOrdering{ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_transformation_helper),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{Any, Int}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Symbol, Bool, Tuple{Bool, Bool}, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{Int}}},OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},UnitRange{Int}})
        Base.precompile(Tuple{typeof(map2refs),PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},Dict{Union{Missing, Int}, UInt32}})
        Base.precompile(Tuple{typeof(_copyto_helper!),SubArray{Float64, 1, Vector{Float64}, Tuple{Base.OneTo{Int}}, true},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Int}, Tuple{Bool}, Tuple{Int}}}},Int})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, BigFloat}},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{Symbol, Bool}})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,DataFrame,Vector{Bool},Colon})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},UnitRange{Int}})
        Base.precompile(Tuple{Type{Matrix{Union{Missing, Float64}}},DataFrame})
        Base.precompile(Tuple{typeof(_transformation_helper),DataFrame,Vector{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Dict{Symbol, Int}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},Vector{Union{Missing, Int}},BitVector})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Dict{String, Int},UnitRange{Int}})
        Base.precompile(Tuple{typeof(_copyto_helper!),SubArray{Float64, 1, Vector{Float64}, Tuple{Base.OneTo{Int}}, true},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Int}, Tuple{Bool}, Tuple{Int}}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Cols{Tuple{Int, Symbol}}})
        Base.precompile(Tuple{typeof(unique),DataFrame,UnitRange{Int}})
        Base.precompile(Tuple{Aggregate{typeof(std), Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Int, Int, Int}}})
        Base.precompile(Tuple{typeof(fill_row!),NamedTuple{(:x1,), Tuple{Char}},Tuple{Vector{Int}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/csv")},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Missing}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{String}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{String}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(unique),DataFrame,Regex})
        Base.precompile(Tuple{Type{OnCol},Vector{Int},Vararg{AbstractVector{T} where T, N} where N})
        Base.precompile(Tuple{Type{DataFrame},Pair{String, Int},Vararg{Pair{String, Int}, N} where N})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Int},Vector{String}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{Type{DataFrame},Vector{Vector{Union{Missing, Int}}},Symbol})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},BitVector})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,DataFrameRow{DataFrame, Index},Int,Colon})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(names),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Regex})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/latex")},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Union{Missing, Int}},Vector{String}})
        Base.precompile(Tuple{typeof(unstack),DataFrame,Symbol,Symbol})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(std), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Union{Missing, Bool}, 1, Vector{Union{Missing, Bool}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 3},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,DataFrame,Base.OneTo{Int},Bool,Base.RefValue{Any},Symbol,Vector{Int}})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{InvertedIndex{InvertedIndex{Regex}}}})
        Base.precompile(Tuple{typeof(fill_row!),NamedTuple{(:x1,), Tuple{Complex{Int}}},Tuple{Vector{Complex{Int}}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(show),IOContext{IOBuffer},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,typeof(/),Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},DataFrame,Colon,All{Tuple{}}})
        Base.precompile(Tuple{typeof(map_refarray),Vector{UInt32},Vector{UInt32},Val{1}})
        Base.precompile(Tuple{typeof(do_call),typeof(identity),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Float64}},Int})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,UnitRange{Int},Colon,Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Symbol, Symbol, Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Pair{String, Pair{typeof(sum), Symbol}}}})
        Base.precompile(Tuple{Type{DataFrameRow},SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Int,Function})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{BigFloat},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(summary),SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:allrows, :allcols, :rowlabel, :summary, :eltypes, :truncate), Tuple{Bool, Bool, Symbol, Bool, Bool, Int}},typeof(show),Base.PipeEndpoint,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),PooledVector{Int, UInt32, Vector{UInt32}},Vector{Int}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}, Vector{Float64}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Float64}}, IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{Any, Int}})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, Index},Matrix{Int},InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Tuple{Int, Int},Int,Colon})
        Base.precompile(Tuple{typeof(isthreadsafe),Tuple{Vector{Missing}},Tuple{Vector{Union{Irrational{:π}, Missing}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :indicator), Tuple{Symbol, Symbol}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}}})
        Base.precompile(Tuple{typeof(_transformation_helper),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},UnitRange{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_add_multicol_res),Matrix{Float64},DataFrame,DataFrame,Vector{Symbol},Base.RefValue{Bool},Base.RefValue{Any},Nothing,Bool,Nothing})
        Base.precompile(Tuple{typeof(_semijoin_sorted),PooledVector{Int, UInt32, Vector{UInt32}},Vector{Int},BitVector})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Function,Bool,Vector{Real},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(check_aggregate),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Union{Missing, Float64}}})
        Base.precompile(Tuple{Core.kwftype(typeof(insertcols!)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(insertcols!),DataFrame,Int,Pair{Symbol, Vector{Int}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Int}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Symbol}},Val{true}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}},Val{true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Float64}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(unique),DataFrame,InvertedIndex{Symbol}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Int,All{Tuple{}}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{Symbol, Vector{Any}}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Between{Int, Int}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Int}, Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(do_call),ByRow{Base.Fix2{typeof(<), Int}},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Int})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},BitVector})
        Base.precompile(Tuple{typeof(names),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}},InvertedIndex{Symbol}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Complex{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Missing},Function,Function,Nothing,Function,Bool,Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{Matrix{Any}},DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},BitVector})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, UInt8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, Bool}, 1, Vector{Union{Missing, Bool}}, Tuple{UnitRange{Int}}, true},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(fill_row!),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Tuple{Vector{Int}, Vector{Int}},Int,Int,Tuple{Symbol, Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, String}}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{String, String, Int}}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{Type{DataFrame},Dict{String, Vector{T} where T}})
        Base.precompile(Tuple{typeof(insert!),Index,Int,Symbol})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, Rational{Int}}},Function,Function,Nothing,Nothing,Bool,Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}},Val{true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Missing}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:id, :variable, :value), Tuple{UnitRange{Int}, Vector{String}, UnitRange{Int}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3}})
        Base.precompile(Tuple{typeof(rename),DataFrame,Dict{Int, String}})
        Base.precompile(Tuple{typeof(_preprocess_column),StackedVector{Int},Int,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :source, :makeunique), Tuple{Symbol, String, Bool}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{typeof(unique),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Bool},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(==), Tuple{Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),Vector{Union{Missing, Int}},Vector{Float64},BitVector,Bool})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},StackedVector{Union{Missing, Float64}},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(==),GroupedDataFrame{SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}}},GroupedDataFrame{SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(describe),DataFrame})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, Index},Vector{Int},Function})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Union{Missing, String}},Vector{Union{Missing, String}},Vararg{Vector{Union{Missing, String}}, N} where N})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Base.OneTo{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{Symbol, AbstractVector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},typeof(!),All{Tuple{}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Int},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(+), Tuple{Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int}}, Int}},Int,Int})
        Base.precompile(Tuple{typeof(nonunique),SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Union{Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{DataFrame},Vector{UnitRange{Int}},Vector{Symbol}})
        Base.precompile(Tuple{typeof(completecases),DataFrame,InvertedIndex{Vector{Int}}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{Array{Float64, 3}},typeof(!),Symbol})
        Base.precompile(Tuple{typeof(unique),DataFrame,Vector{String}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Symbol}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Complex{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(convert),Type{NamedTuple},GroupKey{GroupedDataFrame{DataFrame}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},Vector{Int},BitVector})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Missing},Vector{UInt32}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,BitVector,Vector{Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:copycols,), Tuple{Bool}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),NTuple{4, Vector{Float64}},Val{true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},BitVector})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Vector{Union{Missing, BigInt}},Colon})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols, :source), Tuple{Symbol, Pair{Symbol, Vector{Int}}}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Vector{typeof(nrow)}})
        Base.precompile(Tuple{typeof(subset),SubDataFrame{DataFrame, Index, UnitRange{Int}},Any})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},PooledVector{Int32, UInt32, Vector{UInt32}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},BigInt,Colon})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},InvertedIndex{UnitRange{Bool}}})
        Base.precompile(Tuple{typeof(wrap),Base.RefValue{SubArray{Int, 1, Vector{Int}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}})
        Base.precompile(Tuple{typeof(completecases),DataFrame,Vector{Bool}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Real},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{Union{Missing, Int}},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(hcat),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Int},DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),Vector{Union{Missing, String}},Vector{Union{Missing, String}},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(minimum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}}},OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}}}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{BigInt},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(hcat),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Pair{String, typeof(first)}}})
        Base.precompile(Tuple{typeof(names),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{Type{DFPerm},Vector{Ordering},Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{Type{Matrix{T} where T},DataFrame})
        Base.precompile(Tuple{typeof(view),DataFrame,UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2}})
        Base.precompile(Tuple{typeof(view),DataFrame,Int,Between{Int, Int}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Any}}},Tuple{Vector{Any}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{Type{Vector{Float64}},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Vector{Symbol}, Bool, Tuple{Bool, Bool}, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Type{Matrix{Int}},DataFrame})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},DataFrame,InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Irrational{:π}, Missing}},Function,Function,Nothing,Nothing,Bool,Vector{Union{Irrational{:π}, Missing}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},Vector{Int}})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},DataFrame,UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Regex, InvertedIndex{Regex}}}})
        Base.precompile(Tuple{Type{DFPerm},Tuple{ForwardOrdering, ReverseOrdering{ForwardOrdering}, ForwardOrdering},Tuple{Vector{Int}, Vector{Int}, Vector{Int}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Union{Missing, String}},Vector{Union{Missing, String}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Dict{Symbol, Int}}}},Tuple{Vector{Dict{Symbol, Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{Core.kwftype(typeof(transform)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(transform),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Any})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Int}},Val{true}})
        Base.precompile(Tuple{typeof(map2refs),Vector{Union{Missing, Int}},Dict{Int, UInt32}})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(/)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}, Vector{Int}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(copy),SubIndex{Index, UnitRange{Int}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, UnitRange{Int}},UnitRange{Int},Colon,Int})
        Base.precompile(Tuple{ByRow{typeof(+)},Vector{Float64}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Tuple{Symbol, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, String}}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Symbol}}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Nothing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(genkeymap),GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Symbol}}, Vector{Symbol}}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{String}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Int}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},NTuple{4, Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}},Tuple{Nothing},Tuple{Nothing},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_gen_colnames),Any,Vector{Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ReverseOrdering{ForwardOrdering}, ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(transform),DataFrame,Any})
        Base.precompile(Tuple{Core.kwftype(typeof(describe)),NamedTuple{(:cols,), Tuple{InvertedIndex{Int}}},typeof(describe),DataFrame})
        Base.precompile(Tuple{typeof(push!),DataFrame,Dict{Symbol, Any}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(hcat),DataFrame,SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Int,Between{Int, Int}})
        Base.precompile(Tuple{typeof(_transformation_helper),DataFrame,Base.OneTo{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},BitVector})
        Base.precompile(Tuple{typeof(map2refs),Vector{Int},Dict{Union{Missing, Int}, UInt32}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Int},Vector{Int}})
        Base.precompile(Tuple{typeof(names),DataFrame,InvertedIndex{Symbol}})
        Base.precompile(Tuple{Type{Matrix{T} where T},SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, Index},Tuple{Int, Int},InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Vector{String}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{String},UnitRange{Int},Int})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3}})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Nothing,Bool,Base.RefValue{Any},Symbol,Vector{Vector{Int}}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}}},OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}}},OnColRow{Tuple{Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, Nothing}},typeof(reduce),typeof(vcat),Tuple{SubDataFrame{DataFrame, Index, Vector{Int}}, SubDataFrame{DataFrame, Index, Vector{Int}}, SubDataFrame{DataFrame, Index, Vector{Int}}}})
        Base.precompile(Tuple{typeof(filter),Pair{Vector{Symbol}, typeof(==)},DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Type{OnCol},Vector{Union{Missing, UInt32}},Vararg{Vector{Union{Missing, UInt32}}, N} where N})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Dict{String, Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(nonunique),DataFrame,Function})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Char},Vector{Char},Vararg{Vector{Char}, N} where N})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},InvertedIndex{Regex}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Type{DataFrameRow},SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Int})
        Base.precompile(Tuple{typeof(sort),DataFrame,Function})
        Base.precompile(Tuple{typeof(view),DataFrame,Vector{BigInt},Colon})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame,String})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, Int}}},Val{true}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,Perm{ForwardOrdering, Vector{Union{Missing, Int}}}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, Index},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ForwardOrdering, ReverseOrdering{ForwardOrdering}, ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Nothing,Bool,Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}},SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(filter),Pair{Symbol, typeof(identity)},DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Int},Vector{Union{Missing, Int}},BitVector,Bool})
        Base.precompile(Tuple{Type{DataFrame},Matrix{Int},Vector{Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Colon})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(max),Function,Nothing,Vector{Bool},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Bool}}},Tuple{Vector{Bool}},Vector{Int},Int,Int,Function,GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Int}})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Int})
        Base.precompile(Tuple{typeof(==),DataFrameRow{DataFrame, Index},DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Int}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Int}}},Val{true},Nothing,Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},PooledVector{Int, UInt32, Vector{UInt32}},BitVector})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Base.Sort.MergeSortAlg,Perm{ForwardOrdering, SubArray{Int, 1, Vector{Int}, Tuple{Base.OneTo{Int}}, true}}})
        Base.precompile(Tuple{typeof(wrap),Base.ReshapedArray{Int, 2, UnitRange{Int}, Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(append_rows!),SubDataFrame{DataFrame, Index, SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}},Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Int}, Vector{Union{Missing, Float64}}},Int,NTuple{4, Symbol}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Bool},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_prehash),OnCol{Tuple{Vector{Int}, Vector{Float64}, Vector{String}}, 3}})
        Base.precompile(Tuple{typeof(sort),DataFrame,Vector{Symbol}})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{Rational{Int}},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(ourshow),IOBuffer,Int,Int})
        Base.precompile(Tuple{typeof(==),DataFrame,SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:show_row_number,), Tuple{Bool}},typeof(show),IOContext{IOBuffer},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(hcat),Vector{Int},DataFrame})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Bool, 1, Vector{Bool}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Bool}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Bool}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Float64}}, 2},OnCol{Tuple{Vector{Int}, Vector{Float64}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ForwardOrdering, ReverseOrdering{ForwardOrdering}, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Int},Vector{Union{Missing, Int, Int8}}})
        Base.precompile(Tuple{typeof(_transformation_helper),DataFrame,UnitRange{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Any},Vector{Int}})
        Base.precompile(Tuple{typeof(names),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Cols{Tuple{String}}})
        Base.precompile(Tuple{typeof(_broadcast_unalias_helper),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Float64},DataFrame,Int,Bool})
        Base.precompile(Tuple{typeof(stack),DataFrame,Vector{Any},Vector{Symbol}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{Type{DFPerm},Vector{Ordering},Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(!)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Tuple{SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Pair{Symbol, Symbol}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Missing}, Vector{Missing}}, 2},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,StepRange{Int, Int},Vector{Int}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}, Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,NTuple{5, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Int},Vector{Int},Vararg{Vector{Int}, N} where N})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, Float64}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(do_call),typeof(std),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Tuple{Int}}})
        Base.precompile(Tuple{Type{DataFrame},Pair{Symbol, Int}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Symbol, Int, Symbol}}})
        Base.precompile(Tuple{Type{OnCol},Vector{Float64},Vararg{AbstractVector{T} where T, N} where N})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Int,Bool,Base.RefValue{Any},Symbol,SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}, SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}},Val{true}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Missing}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),Vector{Union{Missing, String}},Vector{String}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(dropmissing),DataFrame,Vector{Bool}})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Tuple{SubDataFrame{DataFrame, Index, Base.OneTo{Int}}}})
        Base.precompile(Tuple{typeof(groupby),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}},Val{true}})
        Base.precompile(Tuple{typeof(select),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Any})
        Base.precompile(Tuple{typeof(_broadcast_unalias_helper),DataFrame,SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true},SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, Index},Tuple{Int, Int, Int},InvertedIndex{Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Vector{Pair{String, typeof(sum)}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Tuple{},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{},FirstMultiCol})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, Bool}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Number},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Symbol}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(map2refs),Vector{Int},Dict{Int, UInt32}})
        Base.precompile(Tuple{Core.kwftype(typeof(push!)),NamedTuple{(:cols,), Tuple{Symbol}},typeof(push!),DataFrame,DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Dict{Any, Int},UnitRange{Int}})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Float64},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Rational{Int}},Function,Function,Nothing,Nothing,Bool,Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, Bool}, 1, Vector{Union{Missing, Bool}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{String},Colon,Symbol})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},SubDataFrame{DataFrame, Index, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},BitVector})
        Base.precompile(Tuple{Type{DataFrame},SubDataFrame{DataFrame, Index, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},BitVector})
        Base.precompile(Tuple{typeof(do_call),typeof(std),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(_show)),NamedTuple{(:rowid,), Tuple{Int}},typeof(_show),Base.TTY,MIME{Symbol("text/html")},DataFrame})
        Base.precompile(Tuple{typeof(do_call),typeof(+),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}, Vector{Int}},Int})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{Symbol, PooledVector{Int, UInt32, Vector{UInt32}}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2}})
        Base.precompile(Tuple{typeof(setindex!),DataFrameRow{DataFrame, Index},DataFrameRow{DataFrame, Index},InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(_preprocess_column),PooledVector{Int32, UInt32, Vector{UInt32}},Int,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(do_call),typeof(std),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(names),DataFrame,Type})
        Base.precompile(Tuple{Type{DataFrame},Pair{String, Vector{Int}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(mean), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Matrix{Int},Colon,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(vcat),DataFrame,DataFrame,DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{Type{DataFrame},Vector{AbstractVector{Int}},Symbol})
        Base.precompile(Tuple{typeof(allowmissing),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Bool}})
        Base.precompile(Tuple{typeof(map),Function,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, String}}},Int})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Function,Function,Bool,Vector{Number},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(maximum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(check_aggregate),typeof(sum),Vector{Number}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Matrix{Int},Colon,All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat),UnitRange{Int},DataFrame})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Function,Bool,Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(insertcols!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(insertcols!),DataFrame,Int,Pair{String, Vector{String}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2}})
        Base.precompile(Tuple{Type{DataFrame},Vector{AbstractVector{T} where T},Symbol})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:allcols, :rowlabel, :eltypes, :truncate), Tuple{Bool, Symbol, Bool, Int}},typeof(show),Base.PipeEndpoint,DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},CartesianIndex{2}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, UnitRange{Int}},Colon,BitVector})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(Base.to_index),GroupedDataFrame{DataFrame},Tuple{Symbol, Int}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(isless),GroupKey{GroupedDataFrame{DataFrame}},DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Irrational{:π}},Function,Function,Function,Nothing,Bool,Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Tuple{SubDataFrame{DataFrame, Index, Base.OneTo{Int}}, SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(disallowmissing)),NamedTuple{(:error,), Tuple{Bool}},typeof(disallowmissing),DataFrame,InvertedIndex{UnitRange{Int}}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, Number}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{Vector{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols,), Tuple{Vector{String}}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Float64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(unstack)),NamedTuple{(:allowmissing,), Tuple{Bool}},typeof(unstack),DataFrame,Int,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Vector{Any}, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}},OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,UnitRange{Int},Colon,String})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,All{Tuple{}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Int,InvertedIndex{Int}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_transformation_helper),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Base.OneTo{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.mul_prod),Function,Nothing,Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{UInt32},Vector{Missing}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,UnitRange{Int},Vector{Bool}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on,), Tuple{Vector{String}}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(_show)),NamedTuple{(:rowid,), Tuple{Int}},typeof(_show),Base.TTY,MIME{Symbol("text/latex")},DataFrame})
        Base.precompile(Tuple{typeof(rename),DataFrame,Pair{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Missing}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{Type{SubIndex},SubIndex{Index, Vector{Int}, Vector{Int}},Vector{Any}})
        Base.precompile(Tuple{typeof(rename),DataFrame,Dict{Symbol, String}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Bool}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(maximum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{Type{DataFrame},Vector{Tuple{Int, Int}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(std), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{StepRange{Int, Int}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(fuzzymatch),Dict{Symbol, Int},Symbol})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Int}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(view),DataFrameRow{DataFrame, Index},InvertedIndex{InvertedIndex{Colon}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Int, 1, Matrix{Int}, Tuple{Base.Slice{Base.OneTo{Int}}, Int}, true}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},BitVector,Symbol})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique), Tuple{Vector{Symbol}, Bool}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(mean), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols, :source), Tuple{Symbol, Pair{String, Vector{Int}}}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(_preprocess_column),RepeatedVector{Int},Int,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, Int}},Vector{Union{Missing, Int}},BitVector})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Vector{Union{Missing, String}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(innerjoin),SubDataFrame{DataFrame, Index, UnitRange{Int}},DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Missing}, Vector{Missing}, Vector{Missing}}, 3},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3}})
        Base.precompile(Tuple{Reduce{typeof(Base.mul_prod), Nothing, Nothing},Vector{Union{Missing, UInt8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Int},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},Vector{Int},BitVector})
        Base.precompile(Tuple{Type{SubIndex},Index,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(do_call),typeof(prod),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}}},OnColRow{Tuple{Vector{Int}, Vector{Float64}, Vector{String}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(disallowmissing)),NamedTuple{(:error,), Tuple{Bool}},typeof(disallowmissing),DataFrame,String})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Missing},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{String}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},Vector{Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(_transformation_helper),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Vector{Int},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Missing}, Vector{Missing}, Vector{Missing}}, 3}})
        Base.precompile(Tuple{typeof(isapprox),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(==),GroupedDataFrame{DataFrame},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(last), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Vector{Float64}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Int}, Vector{Int}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Type{SubDataFrame},DataFrame,UnitRange{Int},Function})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,SubArray{Missing, 1, Vector{Missing}, Tuple{UnitRange{Int}}, true},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{String, UInt32, Vector{UInt32}}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(get_stats),Union{Base.SkipMissing, AbstractVector{T} where T},Vector{Symbol}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Base.OneTo{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(copy),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{InvertedIndex{Regex}, Regex}}})
        Base.precompile(Tuple{typeof(push!),DataFrame,Tuple{Int, Char}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, DataFrame}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Char}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Int,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(Tables.namedtupleiterator),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(_combine_process_pair_astable),Bool,GroupedDataFrame{DataFrame},Dict{Symbol, Tuple{Bool, Int}},Vector{TransformationResult},Base.RefValue{Vector{Int}},Type{AsTable},Bool,Base.RefValue{Any},Base.RefValue{Any},Base.RefValue{Any}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,DataFrame,UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(dropmissing!),DataFrame,UnitRange{Int}})
        Base.precompile(Tuple{typeof(getindex),Index,BigInt})
        Base.precompile(Tuple{typeof(prepare_on_col),SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false},SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Int},Vector{Missing}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{String},Vector{String}})
        Base.precompile(Tuple{typeof(_preprocess_column),Vector{Union{Missing, Function}},Int,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{Symbol, Vector{Int}}}})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Vector{AbstractDataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Vector{Any}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,Perm{ReverseOrdering{ForwardOrdering}, Vector{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}},Val{true}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Float64}}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Float64, 1, Vector{Float64}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Float64}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{Core.kwftype(typeof(stack)),NamedTuple{(:view,), Tuple{Bool}},typeof(stack),DataFrame,InvertedIndex{Vector{Symbol}}})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},typeof(!),UnitRange{Int}})
        Base.precompile(Tuple{typeof(prepare_on_col),PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{Int}, Vector{Missing}}, 2}})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(view),DataFrame,UnitRange{BigInt},Colon})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},BitVector})
        Base.precompile(Tuple{Type{DataFrame},Pair{Symbol, SubArray{Float64, 1, Vector{Float64}, Tuple{UnitRange{Int}}, true}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Int}, Vector{Union{Missing, String}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3}})
        Base.precompile(Tuple{Type{DataFrame},Dict{Symbol, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{Regex}})
        Base.precompile(Tuple{ByRow{typeof(minmax)},Vector{Float64},Vararg{Vector{Float64}, N} where N})
        Base.precompile(Tuple{typeof(subset!),GroupedDataFrame{DataFrame},Any})
        Base.precompile(Tuple{typeof(filter),Pair{Vector{Int}, typeof(!=)},DataFrame})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair}})
        Base.precompile(Tuple{typeof(prepare_on_col),Vector{Union{Missing, UInt32}},Vector{Union{Missing, UInt32}},Vararg{Vector{Union{Missing, UInt32}}, N} where N})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Function,Bool,Vector{Number},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},Vector{Int}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(completecases),DataFrame,Vector{Int}})
        Base.precompile(Tuple{typeof(_prehash),OnCol{Tuple{Vector{Float64}, Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}, 5}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,Vector{Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{Symbol}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2}})
        Base.precompile(Tuple{typeof(completecases),DataFrame,UnitRange{Int}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Union{Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(values),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{BigFloat},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{DataFrame},Matrix{Any},Symbol})
        Base.precompile(Tuple{typeof(view),DataFrame,BitVector,BitVector})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Symbol}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},SortingAlgorithms.TimSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{String, 1, Vector{String}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Union{Missing, Float64}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(permutedims),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(copy),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(flatten),DataFrame,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(transform),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{String}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol},FirstMultiCol})
        Base.precompile(Tuple{Type{DataFrame},Matrix{Tuple{Int, Int}},Symbol})
        Base.precompile(Tuple{typeof(fill_row!),DataFrameRow{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}},Tuple{Vector{String}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}}, 2}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Missing}, Vector{Missing}, Vector{Missing}}, 3}})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{Union{Missing, String}},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Any}}},Tuple{Vector{Any}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Number}}},Int})
        Base.precompile(Tuple{typeof(unique),DataFrame,Function})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Char}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(sort),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Symbol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Symbol}}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},DataFrame})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},InvertedIndex{GroupKey{GroupedDataFrame{DataFrame}}}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Real},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(show),IOBuffer,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Tuple{Float64, Float64}}}},Tuple{Vector{Tuple{Float64, Float64}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Float64}, Vector{Float64}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Union{Missing, Symbol}, 1, Vector{Union{Missing, Symbol}}, Tuple{UnitRange{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),Vector{String},Vector{String},BitVector,Bool})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},BitVector,BitVector})
        Base.precompile(Tuple{typeof(unique),DataFrame,Bool})
        Base.precompile(Tuple{typeof(rename!),typeof(uppercase),Index})
        Base.precompile(Tuple{typeof(subset!),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Any})
        Base.precompile(Tuple{Core.kwftype(typeof(insertcols!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(insertcols!),DataFrame,Int,Pair{Symbol, Int}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:id, :variable, :value), Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}, Vector{Union{Missing, Float64}}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Int}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Union{Missing, Int}}}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, Int, Int8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(delete!),DataFrame,InvertedIndex{InvertedIndices.TupleVector{Tuple{Int, Int}}}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, Int}},Function,Function,Nothing,Nothing,Bool,Vector{Union{Missing, Bool}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{String},Vector{Union{Missing, String}},BitVector})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat),SubDataFrame{DataFrame, Index, Vector{Int}},SubDataFrame{DataFrame, Index, Vector{Int}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, Int}},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},BitVector})
        Base.precompile(Tuple{Core.kwftype(typeof(subset)),NamedTuple{(:ungroup,), Tuple{Bool}},typeof(subset),GroupedDataFrame{DataFrame},Any})
        Base.precompile(Tuple{typeof(reduce),typeof(vcat),Vector{SubDataFrame{DataFrame, Index, Base.OneTo{Int}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, UnitRange{Int}},Vector{Union{Missing, Int}},Colon})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{String},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{PooledVector{String, UInt32, Vector{UInt32}}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(_broadcast_unalias_helper),DataFrame,SubArray{Float64, 1, Vector{Float64}, Tuple{Base.OneTo{Int}}, true},SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Int,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Union{Missing, Float64}}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Union{Missing, Float64}}}, IntegerRefarray{Vector{Union{Missing, Float64}}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(first), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(sum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{typeof(genkeymap),GroupedDataFrame{DataFrame},Tuple{Vector{Int}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{UnitRange{Int}}},Tuple{Vector{Int}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(mean), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(getproperty),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}},Symbol})
        Base.precompile(Tuple{typeof(subset),DataFrame,Any})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Symbol, Pair{String, Vector{Int}}}},typeof(reduce),typeof(vcat),NTuple{4, DataFrame}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Int}, Vector{String}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),DataFrame,Cols{Tuple{Symbol, Symbol}}})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :matchmissing), Tuple{Symbol, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Union{Missing, Int}},PooledVector{Int, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Float64},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(+), Tuple{Base.Broadcast.Extruded{Matrix{Float64}, Tuple{Bool, Bool}, Tuple{Int, Int}}, Base.Broadcast.Extruded{SubArray{Float64, 1, Matrix{Float64}, Tuple{Vector{Int}, Int}, false}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Vector{typeof(nrow)}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Union{Missing, Symbol}, 1, Vector{Union{Missing, Symbol}}, Tuple{Base.OneTo{Int}}, true}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(unstack),DataFrame})
        Base.precompile(Tuple{typeof(view),DataFrame,typeof(!),InvertedIndex{Regex}})
        Base.precompile(Tuple{typeof(==),GroupKey{GroupedDataFrame{DataFrame}},GroupKey{GroupedDataFrame{DataFrame}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{typeof(_gen_colnames),Any,Type{AsTable}})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,Vector{Union{Missing, Float64}},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{GroupKey{GroupedDataFrame{DataFrame}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Union{Missing, Int}}}}})
        Base.precompile(Tuple{typeof(isequal),OnColRow{Tuple{Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}},OnColRow{Tuple{Vector{String}, Vector{Int}, Vector{Float64}, Vector{String}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},typeof(!),Regex})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{BigFloat},Function,Function,Nothing,Function,Bool,Vector{BigInt},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{Matrix{T} where T},SubDataFrame{DataFrame, Index, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(fill_row!),DataFrameRow{DataFrame, Index},Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Int}, Vector{Union{Missing, Float64}}},Int,Int,NTuple{4, Symbol}})
        Base.precompile(Tuple{typeof(getindex),Index,Vector{BigInt}})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Missing},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Union{Missing, String}}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{Symbol, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Union{Missing, Int}}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Union{Missing, Int}}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Union{Missing, Int}}}},Val{true},Nothing,Bool,Bool})
        Base.precompile(Tuple{typeof(_unstack),DataFrame,Vector{Int},Int,GroupedDataFrame{DataFrame},Vector{Int},GroupedDataFrame{DataFrame},Function,Bool,Bool})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Float64}},Tuple{IntegerRefpool{Union{Missing, Int}}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Union{Missing, Float64}}}, IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, String}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Union{Missing, String}}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(view),DataFrame,UnitRange{UInt},Colon})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Any}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Bool},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(==), Tuple{Base.Broadcast.Extruded{Vector{Nothing}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(check_mapping_allowed),Vector{Union{Missing, Int}},Vector{UInt32},Vector{Int},Dict{Int, UInt32}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(view),DataFrameRow{DataFrame, Index},Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(sin)},Vector{Int},UnitRange{Int},UnitRange{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Float64}},Int})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :renamecols, :source), Tuple{Vector{Any}, Pair{String, String}, Symbol}},typeof(leftjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Int,UnitRange{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted_int),Vector{Union{Missing, Int}},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{UInt32},Vector{Union{Missing, UInt32}},BitVector,Bool})
        Base.precompile(Tuple{typeof(wrap),Vector{Vector{Int}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(sort)),NamedTuple{(:view,), Tuple{Bool}},typeof(sort),DataFrame})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{String}, PooledVector{String, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(_pretty_tables_general_formatter),Float64,Int,Int})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Matrix{Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(groupby),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}},Symbol})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{RepeatedVector{Union{Missing, Int}}, RepeatedVector{Union{Missing, Int}}, RepeatedVector{Union{Missing, String}}, Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(wrap),NamedTuple{(:x1,), Tuple{Vector{Bool}}}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(std), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(insertcols!)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(insertcols!),DataFrame,Pair{String, Int}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Union{Missing, UInt}},Function,Function,Nothing,Nothing,Bool,Vector{Union{Missing, UInt8}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),Vector{Union{Missing, UInt32}},Vector{UInt32}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Function,Function,Bool,Vector{Real},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Int}, Vector{Missing}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Union{Missing, Int}},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true},BitVector})
        Base.precompile(Tuple{typeof(transform!),DataFrame,Any,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, String}}, Vector{String}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(disallowmissing)),NamedTuple{(:error,), Tuple{Bool}},typeof(disallowmissing),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Union{Missing, Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{BigInt}},Tuple{Nothing},Tuple{Nothing},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{SubArray{Int, 1, Vector{Int}, Tuple{Base.OneTo{Int}}, true}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{SubArray{Int, 1, Vector{Int}, Tuple{Base.OneTo{Int}}, true}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(fill_row!),NamedTuple{(:x1,), Tuple{Rational{Int}}},Tuple{Vector{Rational{Int}}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}, Vector{Union{Missing, UInt32}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(subset),GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Any})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Int},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(getindex),DataFrameRow{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}},Regex})
        Base.precompile(Tuple{Core.kwftype(typeof(semijoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, Symbol}}}},typeof(semijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/csv")},DataFrame})
        Base.precompile(Tuple{typeof(_add_col_check_copy),DataFrame,DataFrame,Int,Bool,Base.RefValue{Any},Symbol,Vector{String}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},BitVector})
        Base.precompile(Tuple{Type{DataFrame},Base.ReshapedArray{Float64, 2, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Tuple{}},Symbol})
        Base.precompile(Tuple{Type{SubIndex},Index,All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(stack)),NamedTuple{(:variable_name, :value_name, :view), Tuple{Symbol, Symbol, Bool}},typeof(stack),DataFrame,Vector{Symbol},Vector{Symbol}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(getindex),Index,Vector{Union{Missing, String}}})
        Base.precompile(Tuple{typeof(filter!),Pair{Vector{Int}, typeof(!=)},DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on,), Tuple{Pair{String, String}}},typeof(outerjoin),DataFrame,DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_add_multicol_res),DataFrame,DataFrame,DataFrame,Vector{Symbol},Base.RefValue{Bool},Base.RefValue{Any},Int,Bool,Type{AsTable}})
        Base.precompile(Tuple{typeof(==),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Base.OneTo{Int}},DataFrame})
        Base.precompile(Tuple{typeof(sort!),DataFrame,Cols{Tuple{Colon}}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2},BitVector})
        Base.precompile(Tuple{Type{SubIndex},SubIndex{Index, Vector{Int}, Vector{Int}},InvertedIndex{InvertedIndex{Regex}}})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Matrix{Int},UnitRange{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{String}, Vector{Union{Missing, String}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(wrap),Vector{Tuple{Float64, Float64}}})
        Base.precompile(Tuple{typeof(_prehash),OnCol{Tuple{Vector{String}, Vector{Int}}, 2}})
        Base.precompile(Tuple{Type{DFPerm},Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}},Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}})
        Base.precompile(Tuple{typeof(names),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(getindex),Index,UnitRange{BigInt}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),DataFrame,Tuple{Vector{Int}, Vector{String}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Nothing,Tuple{Symbol, Symbol},FirstMultiCol})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Matrix{Int},InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(stack)),NamedTuple{(:variable_name, :value_name, :view), Tuple{String, String, Bool}},typeof(stack),DataFrame,Vector{String},Vector{String}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Vector{UnitRange{Int}}}},Type{DataFrame}})
        Base.precompile(Tuple{typeof(view),DataFrame,Vector{Union{Missing, Integer}},Colon})
        Base.precompile(Tuple{Core.kwftype(typeof(show)),NamedTuple{(:summary,), Tuple{Bool}},typeof(show),IOBuffer,MIME{Symbol("text/html")},DataFrame})
        Base.precompile(Tuple{typeof(insertcols!),DataFrame,Int,Pair{Symbol, Vector{String}}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2}})
        Base.precompile(Tuple{typeof(stack),DataFrame,InvertedIndex{Int}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Float64}},Tuple{IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(prod), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, UnitRange{Int}}}},Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Cols{Tuple{Int, Int, Symbol}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{SubArray{Tuple{Int, Int}, 1, Vector{Tuple{Int, Int}}, Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}}, false}}},Tuple{Vector{Tuple{Int, Int}}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Tuple{Int, Int}}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(do_call),typeof(sum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{DataFrame}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}}}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{Type{DataFrame},DataFrameColumns{DataFrame}})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1,), Tuple{Vector{Vector{Int}}}},Type{DataFrame}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Rational{Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(manipulate)),NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}},typeof(manipulate),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},Vector{Pair{String, Pair{typeof(sum), Symbol}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Float64}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(push!),DataFrame,Matrix{Int}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}}, 2},OnCol{Tuple{Vector{String}, Vector{String}}, 2}})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(_sortperm),SubDataFrame{DataFrame, Index, Vector{Int}},Base.Sort.MergeSortAlg,DFPerm{ForwardOrdering, Tuple{SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}, SubArray{String, 1, PooledVector{String, UInt32, Vector{UInt32}}, Tuple{Vector{Int}}, false}}}})
        Base.precompile(Tuple{typeof(unique),DataFrame,Symbol})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},BitVector,Bool})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, typeof(/)},Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Function,Function,Bool,Vector{ComplexF64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_pretty_tables_general_formatter),SubDataFrame{DataFrame, Index, UnitRange{Int}},Int,Int})
        Base.precompile(Tuple{typeof(rename),DataFrame,Dict{Int, Symbol}})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Float64},Function,Function,Nothing,Function,Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ReverseOrdering{ForwardOrdering}, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{Core.kwftype(typeof(sort)),NamedTuple{(:view,), Tuple{Bool}},typeof(sort),SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(fill_row!),NamedTuple{(:x1,), Tuple{Bool}},Tuple{Vector{Bool}},Int,Int,Tuple{Symbol}})
        Base.precompile(Tuple{typeof(names),DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{Int}, Vector{Int}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(combine),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},Any,Any})
        Base.precompile(Tuple{typeof(_preprocess_column),NamedTuple{(), Tuple{}},Int,Bool})
        Base.precompile(Tuple{typeof(setindex!),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, UnitRange{Int}},Vector{Int},Colon,Int})
        Base.precompile(Tuple{Type{DataFrame},Tables.MatrixTable{Matrix{Float64}}})
        Base.precompile(Tuple{typeof(hashrows_col!),Vector{UInt},Vector{Bool},RepeatedVector{Union{Missing, String}},Nothing,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, Symbol}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Bool}}},Tuple{Vector{Bool}},Vector{Int},Int,Int,Function,GroupedDataFrame{SubDataFrame{DataFrame, Index, UnitRange{Int}}},Tuple{SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(exp)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Int}},Int})
        Base.precompile(Tuple{typeof(getindex),DataFrame,Colon,Between{Symbol, Symbol}})
        Base.precompile(Tuple{typeof(isequal),DataFrameRow{DataFrame, Index},GroupKey{GroupedDataFrame{DataFrame}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{Symbol, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Dict{Symbol, Union{Missing, Int}}})
        Base.precompile(Tuple{typeof(do_call),typeof(mean),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, Symbol}}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(subset!)),NamedTuple{(:skipmissing,), Tuple{Bool}},typeof(subset!),DataFrame,Any,Vararg{Any, N} where N})
        Base.precompile(Tuple{Type{DataFrame},Vector{Pair{String, AbstractVector{Int}}}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{BigFloat},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(identity), Tuple{Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int}}}},Int,Int})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{Int},Cols{Tuple{Colon}}})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :validate, :matchmissing), Tuple{Symbol, Tuple{Bool, Bool}, Symbol}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3},OnCol{Tuple{Vector{String}, Vector{String}, Vector{String}}, 3}})
        Base.precompile(Tuple{typeof(getindex),SubDataFrame{DataFrame, Index, UnitRange{Int}},UnitRange{Int},Colon})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, String}}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{UnitRange{Int}}, true}}, 2},BitVector,Bool})
        Base.precompile(Tuple{typeof(view),DataFrame,InvertedIndex{Int},All{Tuple{}}})
        Base.precompile(Tuple{typeof(rename),DataFrame,Dict{String, String}})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(map2refs),Vector{Union{Missing, Int}},Dict{Union{Missing, Int}, UInt32}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},PooledVector{Int, UInt32, Vector{UInt32}},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Float64}}, Vector{Int}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Aggregate{typeof(var), Nothing},Vector{Union{Missing, Rational{Int}}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on, :makeunique), Tuple{Vector{Any}, Bool}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on,), Tuple{Vector{Symbol}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Bool}}},Tuple{Vector{Bool}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(sort),DataFrame,All{Tuple{}}})
        Base.precompile(Tuple{typeof(getindex),GroupedDataFrame{DataFrame},Vector{Tuple{Any}}})
        Base.precompile(Tuple{typeof(_combine_tables_with_first!),NamedTuple{(:x1,), Tuple{Vector{Float64}}},Tuple{Vector{Float64}},Vector{Int},Int,Int,Function,GroupedDataFrame{DataFrame},Tuple{Vector{Int}, Vector{Float64}},Tuple{Symbol},FirstSingleCol})
        Base.precompile(Tuple{typeof(hashrows),Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}},Bool})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Int},PooledVector{Int, UInt32, Vector{UInt32}},BitVector,Bool})
        Base.precompile(Tuple{typeof(do_call),typeof(maximum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(reduce)),NamedTuple{(:cols, :source), Tuple{Vector{String}, Nothing}},typeof(reduce),typeof(vcat),Tuple{DataFrame, DataFrame}})
        Base.precompile(Tuple{typeof(_filter_helper),Function,SubArray{Any, 1, Vector{Any}, Tuple{UnitRange{Int}}, true},SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}})
        Base.precompile(Tuple{Core.kwftype(typeof(hcat)),NamedTuple{(:makeunique,), Tuple{Bool}},typeof(hcat),SubDataFrame{DataFrame, Index, Vector{Int}},SubDataFrame{DataFrame, Index, Vector{Int}},SubDataFrame{DataFrame, Index, Vector{Int}}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},OnCol{Tuple{SubArray{Int, 1, Vector{Int}, Tuple{UnitRange{Int}}, true}, SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true}}, 2}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Float64}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Int}},Tuple{IntegerRefpool{Int}, IntegerRefpool{Int}},Tuple{IntegerRefarray{Vector{Int}}, IntegerRefarray{Vector{Int}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(maximum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame})
        Base.precompile(Tuple{typeof(similar_outer),Vector{Union{Missing, String}},Vector{String},Int})
        Base.precompile(Tuple{typeof(push!),DataFrame,Vector{Any}})
        Base.precompile(Tuple{typeof(rename!),DataFrame,Vector{Symbol}})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Float64},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(groupreduce_init),typeof(Base.add_sum),Function,Nothing,Vector{Union{Missing, BigFloat}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Int}, Vector{Union{Missing, String}}},Val{true}})
        Base.precompile(Tuple{Core.kwftype(typeof(unstack)),NamedTuple{(:renamecols,), Tuple{typeof(uppercase)}},typeof(unstack),DataFrame,Vector{Symbol},Symbol,Symbol})
        Base.precompile(Tuple{typeof(do_call),ByRow{typeof(!)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3},BitVector,Bool})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, String}, UInt32, Vector{UInt32}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(vcat)),NamedTuple{(:cols,), Tuple{Symbol}},typeof(vcat),DataFrame,Vararg{DataFrame, N} where N})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame,All{Tuple{}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :renamecols), Tuple{Symbol, Bool, Pair{Bool, Bool}, Pair{String, String}}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{Core.kwftype(typeof(repeat)),NamedTuple{(:inner, :outer), Tuple{Int, Int}},typeof(repeat),DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},OnCol{Tuple{Vector{Union{Missing, String}}, Vector{Union{Missing, String}}, Vector{Union{Missing, String}}}, 3},BitVector})
        Base.precompile(Tuple{typeof(similar),RepeatedVector{Int},Type,Tuple{Int}})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Int},Vector{Missing},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(rightjoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(rightjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3},OnCol{Tuple{Vector{UInt32}, Vector{UInt32}, Vector{UInt32}}, 3}})
        Base.precompile(Tuple{Type{SubIndex},SubIndex{Index, Vector{Int}, Vector{Int}},All{Tuple{}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{BigInt}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(_semijoin_sorted),OnCol{Tuple{Vector{Int}, Vector{String}}, 2},OnCol{Tuple{SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{Vector{Int}}, false}, SubArray{Union{Missing, String}, 1, Vector{Union{Missing, String}}, Tuple{Vector{Int}}, false}}, 2},BitVector})
        Base.precompile(Tuple{typeof(_semijoin_unsorted_int),Vector{Union{Missing, Int}},PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}},BitVector,Bool})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 2}})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(minimum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Matrix{Float64}}}},Int})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, Number}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(copyto_widen!),Vector{Float64},Base.Broadcast.Broadcasted{DataFrameStyle, Tuple{Base.OneTo{Int}, Base.OneTo{Int}}, typeof(coalesce), Tuple{Base.Broadcast.Extruded{Vector{Float64}, Tuple{Bool}, Tuple{Int}}, Base.RefValue{Nothing}}},Int,Int})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/plain")},DataFrame})
        Base.precompile(Tuple{typeof(normalize_selection),SubIndex{Index, UnitRange{Int}, UnitRange{Int}},Pair{Symbol, Vector{Symbol}},Bool})
        Base.precompile(Tuple{typeof(==),DataFrame,SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/latex")},SubDataFrame{DataFrame, SubIndex{Index, UnitRange{Int}, UnitRange{Int}}, Base.OneTo{Int}}})
        Base.precompile(Tuple{typeof(allowmissing),DataFrame,Int})
        Base.precompile(Tuple{Core.kwftype(typeof(semijoin)),NamedTuple{(:on,), Tuple{Vector{Pair{Symbol, String}}}},typeof(semijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(minimum), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, DataFrame}}},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(outerjoin)),NamedTuple{(:on, :source), Tuple{Symbol, Symbol}},typeof(outerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(groupreduce!),Vector{Irrational{:π}},Function,Function,Nothing,Nothing,Bool,Vector{Irrational{:π}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(transform),Union{Function, Type},DataFrame})
        Base.precompile(Tuple{typeof(do_call),typeof(var),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Any}},Int})
        Base.precompile(Tuple{Reduce{typeof(Base.add_sum), Nothing, Nothing},Vector{Union{Missing, Float64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_noon_compose_helper!),Vector{AbstractVector{T} where T},typeof(similar_missing),Int,SubArray{String, 1, Vector{String}, Tuple{UnitRange{Int}}, true},Int,Vector{Int},Int,UnitRange{Int},Int})
        Base.precompile(Tuple{Core.kwftype(typeof(antijoin)),NamedTuple{(:on,), Tuple{String}},typeof(antijoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_sorted),Vector{Int},SubArray{Union{Missing, Int}, 1, Vector{Union{Missing, Int}}, Tuple{UnitRange{Int}}, true},BitVector})
        Base.precompile(Tuple{Core.kwftype(typeof(repeat!)),NamedTuple{(:inner, :outer), Tuple{Bool, Int}},typeof(repeat!),DataFrame})
        Base.precompile(Tuple{typeof(_semijoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 2},BitVector,Bool})
        Base.precompile(Tuple{Core.kwftype(typeof(combine)),NamedTuple{(:ungroup,), Tuple{Bool}},typeof(combine),GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, Index, Base.OneTo{Int}},InvertedIndex{Int},Between{Int, Int}})
        Base.precompile(Tuple{typeof(subset),GroupedDataFrame{DataFrame},Any})
        Base.precompile(Tuple{typeof(do_call),ComposedFunction{typeof(var), typeof(skipmissing)},Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{UnitRange{Int}}},Int})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,SortingAlgorithms.TimSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Int}, Vector{Int}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(view),SubDataFrame{DataFrame, SubIndex{Index, Vector{Int}, Vector{Int}}, Vector{Int}},UnitRange{Int},Symbol})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{typeof(do_call),typeof(minimum),Vector{Int},Vector{Int},Vector{Int},GroupedDataFrame{DataFrame},Tuple{Vector{Matrix{Float64}}},Int})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, ComplexF64}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_unsorted),OnCol{Tuple{Vector{Int}, Vector{Int}}, 2},OnCol{Tuple{PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}, PooledVector{Union{Missing, Int}, UInt32, Vector{UInt32}}}, 2}})
        Base.precompile(Tuple{Aggregate{typeof(length), Nothing},Vector{Union{Missing, Int}},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Type{DataFrame},Dict{String, UnitRange{Int}}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},DataFrameRow{DataFrame, Index}})
        Base.precompile(Tuple{typeof(_sortperm),DataFrame,Base.Sort.MergeSortAlg,DFPerm{Tuple{ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ForwardOrdering, ReverseOrdering{ForwardOrdering}}, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}}}})
        Base.precompile(Tuple{typeof(row_group_slots),Tuple{Vector{Union{Missing, Symbol}}},Val{false},Vector{Int},Bool,Bool})
        Base.precompile(Tuple{typeof(ourshow),IOBuffer,Type,Int})
        Base.precompile(Tuple{typeof(genkeymap),GroupedDataFrame{DataFrame},Tuple{Vector{Union{Missing, Symbol}}, Vector{Int}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :validate, :matchmissing), Tuple{Pair{String, String}, Bool, Tuple{Bool, Bool}, Symbol}},typeof(innerjoin),DataFrame,DataFrame})
        Base.precompile(Tuple{typeof(stack),DataFrame,Symbol,Vector{Any}})
        Base.precompile(Tuple{typeof(setindex!),DataFrame,Vector{Float64},typeof(!),Int})
        Base.precompile(Tuple{typeof(reorder_cols!),Vector{TransformationResult},Int,Vector{Union{Missing, Bool}},Vector{Int},Bool,Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{typeof(_innerjoin_sorted),OnCol{Tuple{Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}, Vector{Union{Missing, Int}}}, 3},OnCol{Tuple{PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}, PooledVector{Int, UInt32, Vector{UInt32}}}, 3}})
        Base.precompile(Tuple{Reduce{typeof(max), Nothing, Nothing},Vector{Int},GroupedDataFrame{DataFrame}})
        Base.precompile(Tuple{Core.kwftype(typeof(select)),NamedTuple{(:copycols,), Tuple{Bool}},typeof(select),SubDataFrame{DataFrame, Index, UnitRange{Int}},Any,Any,Vararg{Any, N} where N})

        for v in ([1, 2], [2, 1], [2, 2, 1], Int32[1, 2], Int32[2, 1], Int32[2, 2, 1]),
            op in (identity, x -> string.(x), x -> PooledArrays.PooledArray(string.(x))),
            on in (:v1, [:v1, :v2])
            df = DataFrame(v1=op(v), v2=v)
            combine(groupby(df, on), identity, :v1 => identity,
                    :v2 => ByRow(identity), :v2 => sum)
            innerjoin(df, select(df, on), on=on)
            outerjoin(df, select(df, on), on=on)
        end
    end
    return nothing
end
